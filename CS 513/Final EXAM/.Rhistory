#Calculate Error-Rate
wrongpredc50 <- sum(predictc50 != testdata$Attrition)
#Error-Rate C5.0 predict
errorrate_c50 <- wrongpredc50/length(predictc50)
print(paste("Error Rate:" , errorrate_c50))
### KNOWLEDGE DISCOVERY AND DATA MINING (CS 513-A) ###
# Course         : CS 513-A
# First Name     : Jay Kalyanbhai
# Last Name      : Savani
# Id             : 20009207
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
Final3 <- read.csv(name)
Final3 <- na.omit(Final3)
#Set column Attrition
Final3$Attrition <- factor(Final3$Attrition)
#Display top 30 Rows
head(Final3, n = 30)
#Get the IDS for test train DataSet
id <- array()
for (x in (0:as.integer(nrow(Final3)/4))) {
if(as.integer(4*x + 1) > (nrow(Final3))) {
break
}
id[x + 1] = as.integer(4*x + 1)
}
#Split the DataSet
traindata <- Final3[-id,]
testdata <- Final3[id,]
#Install package C5.0
#install.packages("C50",repos="http://cran.us.r-project.org")
library('C50')
c50 <- C5.0(Attrition~., data = traindata)
#Predict C5.0
predictc50 <- predict(c50, testdata, type = "class" )
#Plot the Tree
plot(c50)
#Frequency Table
table(c5.0 = predictc50, Attrition = testdata$Attrition)
#Calculate Error-Rate
wrongpredc50 <- sum(predictc50 != testdata$Attrition)
#Error-Rate C5.0 predict
errorrate_c50 <- wrongpredc50/length(predictc50)
print(paste("Error Rate:" , errorrate_c50))
### KNOWLEDGE DISCOVERY AND DATA MINING (CS 513-A) ###
# Course         : CS 513-A
# First Name     : Jay Kalyanbhai
# Last Name      : Savani
# Id             : 20009207
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
Final1 <- read.csv(name)
Final1 <- na.omit(Final1)
#Display First 30 Rows
head(Final1, n = 30)
#Adding new columns in the DataSet
Final1['MonthlyIncomeCat'] <- NA
Final1['AgeCat'] <- NA
Final1['YearsAtCompanyCat'] <- NA
#Monthly Income Discretize in the DataSet
Final1$MonthlyIncomeCat <- ifelse(Final1$MonthlyIncome <= 2900,
"income1",
ifelse(Final1$MonthlyIncome > 8500,
"income4",
ifelse(Final1$MonthlyIncome <= 5000,
"income2",
"income3")))
#YearsAtCompany Discretize in the DataSet
Final1$YearsAtCompanyCat <- ifelse(Final1$YearsAtCompany <= 6, "not-senior", "senior")
#Discretize Age in the DataSet
Final1$AgeCat <- ifelse(Final1$Age <= 37, "young", "mature")
#Display First 30 Rows
head(Final1, n = 30)
#Removing the Columns
Final1 <- subset(Final1,select = -c(Age, YearsAtCompany, MonthlyIncome))
#Setting up the Columns as per the DataSet
Final1 <- Final1[c("AgeCat", "JobSatisfaction", "MaritalStatus",
"MonthlyIncomeCat", "YearsAtCompanyCat", "Attrition")]
#Display First 30 Rows
head(Final1, n = 30)
#Saving the New Modified Dataset
write.csv(Final1,file = file.choose(new = T))
### KNOWLEDGE DISCOVERY AND DATA MINING (CS 513-A) ###
# Course         : CS 513-A
# First Name     : Jay Kalyanbhai
# Last Name      : Savani
# Id             : 20009207
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
Final2 <- read.csv(name)
Final2 <- na.omit(Final2)
#Set column 'Attrition' in the DataSet
Final2$Attrition <- factor(Final2$Attrition)
#Display top 30 Rows
head(Final2, n = 30)
#Get the IDS test & train dataSet
id <- array()
for (x in (0:as.integer(nrow(Final2)/4))) {
if(as.integer(4*x + 1) > (nrow(Final2))) {
break
}
id[x + 1] = as.integer(4*x + 1)
}
#Split the DataSet
traindata <- Final2[-id,]
testdata <- Final2[id,]
#Implement Random Forest
library(randomForest)
rf <- randomForest(Attrition~., data = traindata, importance = TRUE)
#Implement Random Forest method
predictrf <- predict(rf, testdata)
#Identify & plotting Important Features
importance(rf)
varImpPlot(rf, main = "Chart of variable importance")
#Frequency Table
table(RandomForest = predictrf, Attrition = testdata$Attrition)
#Calculate error-rate & wrong predictions
wrongpreds_rf <- sum(predictrf != testdata$Attrition)
#Error-Rate
errorrate_rf <- wrongpreds_rf/length(predictrf)
print(paste("Error Rate:" , errorrate_rf))
### KNOWLEDGE DISCOVERY AND DATA MINING (CS 513-A) ###
# Course         : CS 513-A
# First Name     : Jay Kalyanbhai
# Last Name      : Savani
# Id             : 20009207
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
Final3 <- read.csv(name)
Final3 <- na.omit(Final3)
#Set column Attrition
Final3$Attrition <- factor(Final3$Attrition)
#Display top 30 Rows
head(Final3, n = 30)
#Get the IDS for test train DataSet
id <- array()
for (x in (0:as.integer(nrow(Final3)/4))) {
if(as.integer(4*x + 1) > (nrow(Final3))) {
break
}
id[x + 1] = as.integer(4*x + 1)
}
#Split the DataSet
traindata <- Final3[-id,]
testdata <- Final3[id,]
#Install package C5.0
#install.packages("C50",repos="http://cran.us.r-project.org")
library('C50')
c50 <- C5.0(Attrition~., data = traindata)
#Predict C5.0
predictc50 <- predict(c50, testdata, type = "class" )
#Plot the Tree
plot(c50)
#Frequency Table
table(c5.0 = predictc50, Attrition = testdata$Attrition)
#Calculate Error-Rate
wrongpredc50 <- sum(predictc50 != testdata$Attrition)
#Error-Rate C5.0 predict
errorrate_c50 <- wrongpredc50/length(predictc50)
print(paste("Error Rate:" , errorrate_c50))
###  Environmental variables cleared.
rm(list = ls())
### Removing rows with NA
setwd("/Users/darshil")
data <- read.csv("IBM_Attrition_v3.csv",header=TRUE, sep=",")
data <- na.omit(data)
### Displaying first 10 rows of the data
head(data, n = 10)
### Adding new columns
data['MonthlyIncomeCat'] <- NA
data['AgeCat'] <- NA
data['YearsAtCompanyCat'] <- NA
### Discretizing Monthly Income
data$MonthlyIncomeCat <- ifelse(data$MonthlyIncome <= 2900,
"income1",
ifelse(data$MonthlyIncome > 8500,
"income4",
ifelse(data$MonthlyIncome <= 5000,
"income2",
"income3")))
### Discretizing YearsAtCompany
data$YearsAtCompanyCat <- ifelse(data$YearsAtCompany <= 6, "not-senior", "senior")
### Discretizing Age
data$AgeCat <- ifelse(data$Age <= 37, "young", "mature")
### Displaying first 10 rows of the data
head(data, n = 10)
### Dropping original columns
data <- subset(data,select = -c(Age, YearsAtCompany, MonthlyIncome))
### Ordering the columns according to the original dataset
data <- data[c("AgeCat", "JobSatisfaction", "MaritalStatus",
"MonthlyIncomeCat", "YearsAtCompanyCat", "Attrition")]
### Displaying first 10 rows of the data
head(data, n = 10)
### Saving the new data set obtained
write.csv(data, "Attrition_Modified.csv", row.names=FALSE)
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
data <- read.csv(name)
data <- na.omit(data())
### Displaying first 10 rows of the data
head(data, n = 10)
### Adding new columns
data['MonthlyIncomeCat'] <- NA
data['AgeCat'] <- NA
data['YearsAtCompanyCat'] <- NA
### Discretizing Monthly Income
data$MonthlyIncomeCat <- ifelse(data$MonthlyIncome <= 2900,
"income1",
ifelse(data$MonthlyIncome > 8500,
"income4",
ifelse(data$MonthlyIncome <= 5000,
"income2",
"income3")))
### Discretizing YearsAtCompany
data$YearsAtCompanyCat <- ifelse(data$YearsAtCompany <= 6, "not-senior", "senior")
### Discretizing Age
data$AgeCat <- ifelse(data$Age <= 37, "young", "mature")
### Displaying first 10 rows of the data
head(data, n = 10)
### Dropping original columns
data <- subset(data,select = -c(Age, YearsAtCompany, MonthlyIncome))
### Ordering the columns according to the original dataset
data <- data[c("AgeCat", "JobSatisfaction", "MaritalStatus",
"MonthlyIncomeCat", "YearsAtCompanyCat", "Attrition")]
### Displaying first 10 rows of the data
head(data, n = 10)
### Saving the new data set obtained
write.csv(data,file = file.choose(new = T))
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
data <- read.csv(name)
data <- na.omit(data())
### Displaying first 10 rows of the data
head(data, n = 10)
### Adding new columns
data['MonthlyIncomeCat'] <- NA
data['AgeCat'] <- NA
data['YearsAtCompanyCat'] <- NA
### Discretizing Monthly Income
data$MonthlyIncomeCat <- ifelse(data$MonthlyIncome <= 2900,
"income1",
ifelse(data$MonthlyIncome > 8500,
"income4",
ifelse(data$MonthlyIncome <= 5000,
"income2",
"income3")))
### Discretizing YearsAtCompany
data$YearsAtCompanyCat <- ifelse(data$YearsAtCompany <= 6, "not-senior", "senior")
### Discretizing Age
data$AgeCat <- ifelse(data$Age <= 37, "young", "mature")
### Displaying first 10 rows of the data
head(data, n = 10)
### Dropping original columns
data <- subset(data,select = -c(Age, YearsAtCompany, MonthlyIncome))
### Ordering the columns according to the original dataset
data <- data[c("AgeCat", "JobSatisfaction", "MaritalStatus",
"MonthlyIncomeCat", "YearsAtCompanyCat", "Attrition")]
### Displaying first 10 rows of the data
head(data, n = 10)
### Saving the new data set obtained
write.csv(data,file = file.choose(new = T))
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
data <- read.csv(name)
data <- na.omit(data)
### Displaying first 10 rows of the data
head(data, n = 10)
### Adding new columns
data['MonthlyIncomeCat'] <- NA
data['AgeCat'] <- NA
data['YearsAtCompanyCat'] <- NA
### Discretizing Monthly Income
data$MonthlyIncomeCat <- ifelse(data$MonthlyIncome <= 2900,
"income1",
ifelse(data$MonthlyIncome > 8500,
"income4",
ifelse(data$MonthlyIncome <= 5000,
"income2",
"income3")))
### Discretizing YearsAtCompany
data$YearsAtCompanyCat <- ifelse(data$YearsAtCompany <= 6, "not-senior", "senior")
### Discretizing Age
data$AgeCat <- ifelse(data$Age <= 37, "young", "mature")
### Displaying first 10 rows of the data
head(data, n = 10)
### Dropping original columns
data <- subset(data,select = -c(Age, YearsAtCompany, MonthlyIncome))
### Ordering the columns according to the original dataset
data <- data[c("AgeCat", "JobSatisfaction", "MaritalStatus",
"MonthlyIncomeCat", "YearsAtCompanyCat", "Attrition")]
### Displaying first 10 rows of the data
head(data, n = 10)
### Saving the new data set obtained
write.csv(data,file = file.choose(new = T))
### KNOWLEDGE DISCOVERY AND DATA MINING (CS 513-A) ###
# Course         : CS 513-A
# First Name     : Jay Kalyanbhai
# Last Name      : Savani
# Id             : 20009207
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
Final2 <- read.csv(name)
Final2 <- na.omit(Final2)
#Set column 'Attrition' in the DataSet
Final2$Attrition <- factor(Final2$Attrition)
#Display top 30 Rows
head(Final2, n = 30)
#Get the IDS test & train dataSet
id <- array()
for (x in (0:as.integer(nrow(Final2)/4))) {
if(as.integer(4*x + 1) > (nrow(Final2))) {
break
}
id[x + 1] = as.integer(4*x + 1)
}
#Split the DataSet
traindata <- Final2[-id,]
testdata <- Final2[id,]
#Implement Random Forest
library(randomForest)
rf <- randomForest(Attrition~., data = traindata, importance = TRUE)
#Implement Random Forest method
predictrf <- predict(rf, testdata)
#Identify & plotting Important Features
importance(rf)
varImpPlot(rf, main = "Chart of variable importance")
#Frequency Table
table(RandomForest = predictrf, Attrition = testdata$Attrition)
#Calculate error-rate & wrong predictions
wrongpreds_rf <- sum(predictrf != testdata$Attrition)
#Error-Rate
errorrate_rf <- wrongpreds_rf/length(predictrf)
print(paste("Error Rate:" , errorrate_rf))
### KNOWLEDGE DISCOVERY AND DATA MINING (CS 513-A) ###
# Course         : CS 513-A
# First Name     : Jay Kalyanbhai
# Last Name      : Savani
# Id             : 20009207
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
Final3 <- read.csv(name)
Final3 <- na.omit(Final3)
#Set column Attrition
Final3$Attrition <- factor(Final3$Attrition)
#Display top 30 Rows
head(Final3, n = 30)
#Get the IDS for test train DataSet
id <- array()
for (x in (0:as.integer(nrow(Final3)/4))) {
if(as.integer(4*x + 1) > (nrow(Final3))) {
break
}
id[x + 1] = as.integer(4*x + 1)
}
#Split the DataSet
traindata <- Final3[-id,]
testdata <- Final3[id,]
#Install package C5.0
#install.packages("C50",repos="http://cran.us.r-project.org")
library('C50')
c50 <- C5.0(Attrition~., data = traindata)
#Predict C5.0
predictc50 <- predict(c50, testdata, type = "class" )
#Plot the Tree
plot(c50)
#Frequency Table
table(c5.0 = predictc50, Attrition = testdata$Attrition)
#Calculate Error-Rate
wrongpredc50 <- sum(predictc50 != testdata$Attrition)
#Error-Rate C5.0 predict
errorrate_c50 <- wrongpredc50/length(predictc50)
print(paste("Error Rate:" , errorrate_c50))
### KNOWLEDGE DISCOVERY AND DATA MINING (CS 513-A) ###
# Course         : CS 513-A
# First Name     : Jay Kalyanbhai
# Last Name      : Savani
# Id             : 20009207
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
Final1 <- read.csv(name)
Final1 <- na.omit(Final1)
#Display First 30 Rows
head(Final1, n = 30)
#Adding new columns in the DataSet
Final1['MonthlyIncomeCat'] <- NA
Final1['AgeCat'] <- NA
Final1['YearsAtCompanyCat'] <- NA
#Monthly Income Discretize in the DataSet
Final1$MonthlyIncomeCat <- ifelse(Final1$MonthlyIncome <= 2900,
"income1",
ifelse(Final1$MonthlyIncome > 8500,
"income4",
ifelse(Final1$MonthlyIncome <= 5000,
"income2",
"income3")))
#YearsAtCompany Discretize in the DataSet
Final1$YearsAtCompanyCat <- ifelse(Final1$YearsAtCompany <= 6, "not-senior", "senior")
#Discretize Age in the DataSet
Final1$AgeCat <- ifelse(Final1$Age <= 37, "young", "mature")
#Display First 30 Rows
head(Final1, n = 30)
#Removing the Columns
Final1 <- subset(Final1,select = -c(Age, YearsAtCompany, MonthlyIncome))
#Setting up the Columns as per the DataSet
Final1 <- Final1[c("AgeCat", "JobSatisfaction", "MaritalStatus",
"MonthlyIncomeCat", "YearsAtCompanyCat", "Attrition")]
#Display First 30 Rows
head(Final1, n = 30)
#Saving the New Modified Dataset
write.csv(Final1,file = file.choose(new = T))
### KNOWLEDGE DISCOVERY AND DATA MINING (CS 513-A) ###
# Course         : CS 513-A
# First Name     : Jay Kalyanbhai
# Last Name      : Savani
# Id             : 20009207
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
Final2 <- read.csv(name)
Final2 <- na.omit(Final2)
#Set column 'Attrition' in the DataSet
Final2$Attrition <- factor(Final2$Attrition)
#Display top 30 Rows
head(Final2, n = 30)
#Get the IDS test & train dataSet
id <- array()
for (x in (0:as.integer(nrow(Final2)/4))) {
if(as.integer(4*x + 1) > (nrow(Final2))) {
break
}
id[x + 1] = as.integer(4*x + 1)
}
#Split the DataSet
traindata <- Final2[-id,]
testdata <- Final2[id,]
#Implement Random Forest
library(randomForest)
rf <- randomForest(Attrition~., data = traindata, importance = TRUE)
#Implement Random Forest method
predictrf <- predict(rf, testdata)
#Identify & plotting Important Features
importance(rf)
varImpPlot(rf, main = "Chart of variable importance")
#Frequency Table
table(RandomForest = predictrf, Attrition = testdata$Attrition)
#Calculate error-rate & wrong predictions
wrongpreds_rf <- sum(predictrf != testdata$Attrition)
#Error-Rate
errorrate_rf <- wrongpreds_rf/length(predictrf)
print(paste("Error Rate:" , errorrate_rf))
### KNOWLEDGE DISCOVERY AND DATA MINING (CS 513-A) ###
# Course         : CS 513-A
# First Name     : Jay Kalyanbhai
# Last Name      : Savani
# Id             : 20009207
#Clear Enviromental Variables in the DataSet
rm(list = ls())
#Remove NAs in the DataSet
name<-file.choose()
Final3 <- read.csv(name)
Final3 <- na.omit(Final3)
#Set column Attrition
Final3$Attrition <- factor(Final3$Attrition)
#Display top 30 Rows
head(Final3, n = 30)
#Get the IDS for test train DataSet
id <- array()
for (x in (0:as.integer(nrow(Final3)/4))) {
if(as.integer(4*x + 1) > (nrow(Final3))) {
break
}
id[x + 1] = as.integer(4*x + 1)
}
#Split the DataSet
traindata <- Final3[-id,]
testdata <- Final3[id,]
#Install package C5.0
#install.packages("C50",repos="http://cran.us.r-project.org")
library('C50')
c50 <- C5.0(Attrition~., data = traindata)
#Predict C5.0
predictc50 <- predict(c50, testdata, type = "class" )
#Plot the Tree
plot(c50)
#Frequency Table
table(c5.0 = predictc50, Attrition = testdata$Attrition)
#Calculate Error-Rate
wrongpredc50 <- sum(predictc50 != testdata$Attrition)
#Error-Rate C5.0 predict
errorrate_c50 <- wrongpredc50/length(predictc50)
print(paste("Error Rate:" , errorrate_c50))
